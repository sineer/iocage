#!/bin/sh

__pull () {
    local _local_pool _remote_pool _local_snapshot _remote_snapshot \
	  _uuid _ssh_host _ssh_port

    _uuid="$1"
    _ssh_host="$2"
    _ssh_port="$3"

    # TODO: use zfs properties to save ssh_host and ssh_port options
    #       and make 2nd and 3rd arg optional.

    local _jail="$(__find_jail $_uuid)"
    local _sink="$(__find_sink $_uuid)"

    if [ -z $_jail ]; then
	echo "JAIL NOT FOUND"
	exit 1
    fi
    if [ -z $_sink ]; then
	echo "SINK NOT FOUND"
	exit 1
    fi
    
    uuid=$(zfs get -H -o value org.freebsd.iocage:host_hostuuid $_jail)
    local _snapshot="$(date "+%F-%T")"
    local _zfs_snapshots="$(zfs list -H -t snapshot -o name)"

    local _skel_snapshots="$(echo "$_zfs_snapshots" | grep -E "^${pool}${iocroot}/jails/$uuid/root/s@")"
    local _skelsnap=$(echo "$_skel_snapshots" | tail -n 1)

    zfs snapshot -r $_jail/root/s@$_snapshot
    
    local _dst="${_sink}/root/s"
    local _res=$(zfs list -H -o name $_dst | wc -l)
    if [ ! $_res -eq 1 ]; then
	echo "SINK SKEL POOL: $_dst NOT FOUND!"
	exit 1
    fi
    zfs send -RI $_skelsnap $_jail/root/s@$_snapshot | zfs recv -vF $_dst
    # if [ ! $? -eq 0 ]; then
    # 	echo "PULL FAILED!"
    # 	exit $_res
    # fi

    __clone_iocage_zfs_properties $_jail $_sink 
    __set_sink_prop last_pull=$_snapshot ${uuid}
}


__push () {
    local _local_pool _remote_pool _local_snapshot _remote_snapshot \
	  _uuid _ssh_host _ssh_port

    _uuid="$1"
    _ssh_host="$2"
    _ssh_port="$3"

    # TODO: use zfs properties to save ssh_host and ssh_port options
    #       and make 2nd and 3rd arg optional.

    local _jail="$(__find_jail $_uuid)"
    local _sink="$(__find_sink $_uuid)"

    if [ -z $_jail ]; then
	echo "JAIL NOT FOUND"
	exit 1
    fi
    if [ -z $_sink ]; then
	echo "SINK NOT FOUND"
	exit 1
    fi
    
    uuid=$(zfs get -H -o value org.freebsd.iocage:host_hostuuid $_jail)
    local _snapshot="$(date "+%F-%T")"
    local _zfs_snapshots="$(zfs list -H -t snapshot -o name)"

    local _sink_snapshots="$(echo "$_zfs_snapshots" | grep -E "^${pool}${iocroot}/sinks/$uuid/root/s@")"
    local _sinksnap=$(echo "$_sink_snapshots" | tail -n 1)

    zfs snapshot -r $_sink/root/s@$_snapshot
    
    local _dst="${_jail}/root/s"
    local _res=$(zfs list -H -o name $_dst | wc -l)
    if [ ! $_res -eq 1 ]; then
	echo "JAIL SKEL POOL: $_dst NOT FOUND!"
	exit 1
    fi
    zfs send -RI $_sinksnap $_sink/root/s@$_snapshot | zfs recv -vF $_dst
    # if [ ! $? -eq 0 ]; then
    # 	echo "PUSH FAILED."
    # 	exit $_res
    # fi

    __clone_iocage_zfs_properties $_sink $_jail
    __set_sink_prop last_push=$_snapshot ${uuid}
}


__branch () {
    iocroot=$1
}


__deploy () {

    # TODO ...
}
